group 'org.springframework'
version '5.0.15.BUILD-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}
dependencies {
    // testCompile group: 'junit', name: 'junit', version: '4.12'
    compile(project(":spring-core"))
    compile("mysql:mysql-connector-java:5.1.46")
    compile("com.alibaba:druid:1.1.8")
    compile(project(":spring-beans"))
    compile group: 'org.mybatis', name: 'mybatis', version: '3.2.2'
    compile group: 'org.mybatis', name: 'mybatis-spring', version: '2.0.4'
    optional("org.aspectj:aspectjweaver:${aspectjVersion}")
//    compile("org.projectlombok:lombok:1.18.4")
//    compileOnly 'org.projectlombok:lombok:1.18.2'
//    compile("org.projectlombok:lombok:1.18.4")
    compile("com.github.pagehelper:pagehelper:4.1.6")

    optional(project(":spring-aop"))
    optional(project(":spring-context"))
    optional(project(":spring-jdbc"))

}
/////orgin belwo
//dependencies {
//    testCompile group: 'junit', name: 'junit', version: '4.12'
//    compile("mysql:mysql-connector-java:5.1.46")
//    compile("com.alibaba:druid:1.1.8")
//    compile group: 'org.mybatis', name: 'mybatis', version: '3.4.6'
//    compile group: 'org.mybatis', name: 'mybatis-spring', version: '2.0.4'
////    compile("org.mybatis:mybatis-spring:2.0.3-smlz")
////    compile("org.mybatis:mybatis:3.5.3-smlz")
////    compile("org.projectlombok:lombok:1.18.4")
//    compileOnly 'org.projectlombok:lombok:1.18.2'
//
//    compile("com.github.pagehelper:pagehelper:4.1.6")
//    optional(project(":spring-context"))
//    compile(project(":spring-jdbc"))
////    compile("ch.qos.logback:logback-core:1.1.2")
////    compile("ch.qos.logback:logback-classic:1.1.2")
////    compile("org.slf4j:slf4j-api:1.7.7")
////    optional(project(":spring-aop"))
////    compile(project(":spring-jdbc"))
////    compile("org.aspectj:aspectjweaver:1.8.13")
////    compile("org.mybatis.caches:mybatis-ehcache:1.1.0")
////    compile("net.sf.ehcache:ehcache-core:2.6.11")
//
//
//
//}

tasks.withType(JavaCompile) {
    // Try to turn them all off automatically
    options.compilerArgs << '-Xlint:none'
    options.compilerArgs << '-nowarn' // same as '-Xlint:none'

    // Turn them off manually
    options.compilerArgs << '-Xlint:-auxiliaryclass'
    options.compilerArgs << '-Xlint:-cast'
    options.compilerArgs << '-Xlint:-classfile'
    options.compilerArgs << '-Xlint:-deprecation'
    options.compilerArgs << '-Xlint:-dep-ann'
    options.compilerArgs << '-Xlint:-divzero'
    options.compilerArgs << '-Xlint:-empty'
    options.compilerArgs << '-Xlint:-fallthrough'
    options.compilerArgs << '-Xlint:-finally'
    options.compilerArgs << '-Xlint:-options'
    options.compilerArgs << '-Xlint:-overloads'
    options.compilerArgs << '-Xlint:-overrides'
    options.compilerArgs << '-Xlint:-path'
    options.compilerArgs << '-Xlint:-processing'
    options.compilerArgs << '-Xlint:-rawtypes'
    options.compilerArgs << '-Xlint:-serial' <<"-Werror"
    options.compilerArgs << '-Xlint:-static'
    options.compilerArgs << '-Xlint:-try'
    options.compilerArgs << '-Xlint:-unchecked' <<"-Werror"
    options.compilerArgs << '-Xlint:-varargs'
}
//task "create-dirs" << {
//    sourceSets*.java.srcDirs*.each {
//        it.mkdirs()
//    }
//    sourceSets*.resources.srcDirs*.each{
//        it.midirs()
//    }
//}
